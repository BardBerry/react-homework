{"ast":null,"code":"var _jsxFileName = \"/home/bardberry/BardBerry/yandex/school/react_homework/src/pages/Main/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '../../components/Button/Button';\nimport Checkbox from '../../components/Checkbox/Checkbox';\nimport Modal from '../../components/Modal/Modal';\nimport TaskCard from '../../components/TaskCard/TaskCard';\nimport { useToggle } from '../../hooks/useToggle';\nimport styles from './styles.module.css';\nimport close from '../../assets/images/close.png';\nimport Input from '../../components/Input/Input';\nimport TagSelector from '../../components/TagSelector/TagSelector';\nimport Comment from '../../components/Comment/Comment';\nimport { database } from '../../assets/database';\nimport TaskForm from '../../components/TaskForm/TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  let {\n    value,\n    toggle\n  } = useToggle(false);\n  let [modalType, setModalType] = useState('');\n  function clickHandler(e) {\n    // console.log(e.target);\n    switch (e.target.textContent) {\n      case '+ Добавить тикет':\n        setModalType('create');\n        break;\n      default:\n        setModalType('delete');\n        break;\n    }\n    toggle();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [modalType === 'create' && value && /*#__PURE__*/_jsxDEV(Modal, {\n      text: 'Создать тикет',\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: close,\n        alt: \"\",\n        onClick: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          name: \"task\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"description\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TagSelector, {\n          tagsArray: database.tagsArray,\n          setValue: setValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: 'Сохранить',\n          type: 'save_big'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 43\n    }, this), modalType !== 'create' && value && /*#__PURE__*/_jsxDEV(Modal, {\n      text: 'Редактировать',\n      tagsArray: database.tagsArray,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: close,\n        alt: \"\",\n        onClick: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: 'input',\n        placeholder: ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: 'Описание'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TagSelector, {\n        tagsArray: database.tagsArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: 'Сохранить',\n        type: 'save_big'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.filter,\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        text: 'Комментарий'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        text: 'Описание'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        text: 'Тег'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.task_container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.todo_container,\n          children: [database.todo.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n            text: task.text,\n            tagsArray: task.tagsArray,\n            id: task.id,\n            clickHandler: clickHandler\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 42\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: clickHandler,\n            text: '+ Добавить тикет',\n            type: 'add_big'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"In progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.progress_container,\n          children: [database.progress.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n            text: task.text,\n            tagsArray: task.tagsArray,\n            id: task.id,\n            clickHandler: clickHandler\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 46\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            text: '+ Добавить тикет',\n            type: 'add_big',\n            onClick: clickHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.done_container,\n          children: database.done.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n            text: task.text,\n            tagsArray: task.tagsArray,\n            id: task.id\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 42\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"aB4jXZZnztyYd62lY9YUaWFcad0=\", false, function () {\n  return [useToggle];\n});\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","Button","Checkbox","Modal","TaskCard","useToggle","styles","close","Input","TagSelector","Comment","database","TaskForm","Main","value","toggle","modalType","setModalType","clickHandler","e","target","textContent","container","tagsArray","setValue","filter","task_container","todo_container","todo","map","task","text","id","progress_container","progress","done_container","done"],"sources":["/home/bardberry/BardBerry/yandex/school/react_homework/src/pages/Main/Main.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Button from '../../components/Button/Button';\nimport Checkbox from '../../components/Checkbox/Checkbox'\nimport Modal from '../../components/Modal/Modal';\nimport TaskCard from '../../components/TaskCard/TaskCard';\nimport { useToggle } from '../../hooks/useToggle';\nimport styles from './styles.module.css';\nimport close from '../../assets/images/close.png'\nimport Input from '../../components/Input/Input';\nimport TagSelector from '../../components/TagSelector/TagSelector';\nimport Comment from '../../components/Comment/Comment';\n\nimport { database } from '../../assets/database';\nimport TaskForm from '../../components/TaskForm/TaskForm';\n\nexport default function Main() {\n  let { value, toggle } = useToggle(false);\n  let [modalType, setModalType] = useState('');\n\n  function clickHandler(e) {\n    // console.log(e.target);\n    switch (e.target.textContent) {\n      case '+ Добавить тикет':\n        setModalType('create');\n        break;\n      default:\n        setModalType('delete');\n        break;\n    }\n    toggle();\n  }\n\n  return (\n    <div className={styles.container}>\n      {/* <TaskForm /> */}\n      {modalType === 'create' && value && <Modal text={'Создать тикет'}>\n        <img src={close} alt=\"\" onClick={toggle} />\n        <TaskForm>\n          <Input name='task' type='text' />\n          <Input name='description' type='text' />\n          <TagSelector tagsArray={database.tagsArray} setValue={setValue} />\n          <Button text={'Сохранить'} type={'save_big'} />\n        </TaskForm>\n      </Modal>}\n\n      {modalType !== 'create' && value && <Modal text={'Редактировать'} tagsArray={database.tagsArray}>\n        <img src={close} alt=\"\" onClick={toggle} />\n        <Input type={'input'} placeholder={''} />\n        <Input placeholder={'Описание'} />\n        <TagSelector tagsArray={database.tagsArray} />\n        <Button text={'Сохранить'} type={'save_big'} />\n      </Modal>}\n\n      <div className={styles.filter}>\n        <Checkbox text={'Комментарий'} />\n        <Checkbox text={'Описание'} />\n        <Checkbox text={'Тег'} />\n      </div>\n      <div className={styles.task_container}>\n        <div>\n          <h2>Todo</h2>\n          <div className={styles.todo_container}>\n            {database.todo.map((task) => <TaskCard text={task.text} tagsArray={task.tagsArray} key={task.id} id={task.id} clickHandler={clickHandler} />)}\n            <Button onClick={clickHandler} text={'+ Добавить тикет'} type={'add_big'} />\n          </div>\n        </div>\n        <div>\n          <h2>In progress</h2>\n          <div className={styles.progress_container}>\n            {database.progress.map((task) => <TaskCard text={task.text} tagsArray={task.tagsArray} key={task.id} id={task.id} clickHandler={clickHandler} />)}\n            <Button text={'+ Добавить тикет'} type={'add_big'} onClick={clickHandler} />\n          </div>\n        </div>\n        <div>\n          <h2>Done</h2>\n          <div className={styles.done_container}>\n            {database.done.map((task) => <TaskCard text={task.text} tagsArray={task.tagsArray} key={task.id} id={task.id} />)}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}