{"ast":null,"code":"var _jsxFileName = \"/home/bardberry/BardBerry/yandex/school/react_homework/src/components/TaskForm/TaskForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button';\nimport TagSelector from '../TagSelector/TagSelector';\nimport { database } from '../../assets/database';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskForm(_ref) {\n  _s();\n  let {\n    modalType\n  } = _ref;\n  const [value, setValue] = useState([]);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {},\n    onSubmit: (values, _ref2) => {\n      let {\n        resetForm\n      } = _ref2;\n      console.log(values);\n      resetForm();\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [modalType === 'create' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"task\",\n            type: \"text\",\n            input: 'input',\n            placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"description\",\n            type: \"text\",\n            placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TagSelector, {\n            tagsArray: database.tagsArray,\n            setValue: setValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: 'Сохранить',\n            type: 'save_big'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), modalType !== 'create' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"task\",\n            type: \"text\",\n            input: 'input',\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"description\",\n            type: \"text\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TagSelector, {\n            tagsArray: database.tagsArray,\n            setValue: setValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: 'Сохранить',\n            type: 'save_big'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"nXyUXLCLqjbO8MhWxJGJNfpoKZM=\");\n_c = TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","Formik","Form","Input","Button","TagSelector","database","styles","TaskForm","modalType","value","setValue","values","resetForm","console","log","container","tagsArray"],"sources":["/home/bardberry/BardBerry/yandex/school/react_homework/src/components/TaskForm/TaskForm.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Formik, Form } from 'formik';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button';\nimport TagSelector from '../TagSelector/TagSelector';\nimport { database } from '../../assets/database';\nimport styles from './styles.module.css';\n\nexport default function TaskForm({ modalType }) {\n  const [value, setValue] = useState([]);\n\n  return (\n    <Formik initialValues={{}} onSubmit={(values, { resetForm }) => {\n      console.log(values);\n      resetForm();\n    }}>\n      <Form>\n        <div className={styles.container}>\n          {modalType === 'create' &&\n            <>\n              <Input name='task' type='text' input={'input'} placeholder='Название' />\n              <Input name='description' type='text' placeholder='Описание' />\n              <TagSelector tagsArray={database.tagsArray} setValue={setValue} />\n              <Button text={'Сохранить'} type={'save_big'} />\n            </>\n          }\n          {modalType !== 'create' &&\n            <>\n              <Input name='task' type='text' input={'input'} placeholder='' />\n              <Input name='description' type='text' placeholder='' />\n              <TagSelector tagsArray={database.tagsArray} setValue={setValue} />\n              <div className=''></div>\n              <Button text={'Сохранить'} type={'save_big'} />\n            </>\n          }\n        </div>\n      </Form>\n    </Formik>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,IAAI,QAAQ,QAAQ;AACrC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,WAAW,MAAM,4BAA4B;AACpD,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAAA;AAEzC,eAAe,SAASC,QAAQ,OAAgB;EAAA;EAAA,IAAf;IAAEC;EAAU,CAAC;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,oBACE,QAAC,MAAM;IAAC,aAAa,EAAE,CAAC,CAAE;IAAC,QAAQ,EAAE,CAACY,MAAM,YAAoB;MAAA,IAAlB;QAAEC;MAAU,CAAC;MACzDC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MACnBC,SAAS,EAAE;IACb,CAAE;IAAA,uBACA,QAAC,IAAI;MAAA,uBACH;QAAK,SAAS,EAAEN,MAAM,CAACS,SAAU;QAAA,WAC9BP,SAAS,KAAK,QAAQ,iBACrB;UAAA,wBACE,QAAC,KAAK;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAC,MAAM;YAAC,KAAK,EAAE,OAAQ;YAAC,WAAW,EAAC;UAAU;YAAA;YAAA;YAAA;UAAA,QAAG,eACxE,QAAC,KAAK;YAAC,IAAI,EAAC,aAAa;YAAC,IAAI,EAAC,MAAM;YAAC,WAAW,EAAC;UAAU;YAAA;YAAA;YAAA;UAAA,QAAG,eAC/D,QAAC,WAAW;YAAC,SAAS,EAAEH,QAAQ,CAACW,SAAU;YAAC,QAAQ,EAAEN;UAAS;YAAA;YAAA;YAAA;UAAA,QAAG,eAClE,QAAC,MAAM;YAAC,IAAI,EAAE,WAAY;YAAC,IAAI,EAAE;UAAW;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA,gBAC9C,EAEJF,SAAS,KAAK,QAAQ,iBACrB;UAAA,wBACE,QAAC,KAAK;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAC,MAAM;YAAC,KAAK,EAAE,OAAQ;YAAC,WAAW,EAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG,eAChE,QAAC,KAAK;YAAC,IAAI,EAAC,aAAa;YAAC,IAAI,EAAC,MAAM;YAAC,WAAW,EAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG,eACvD,QAAC,WAAW;YAAC,SAAS,EAAEH,QAAQ,CAACW,SAAU;YAAC,QAAQ,EAAEN;UAAS;YAAA;YAAA;YAAA;UAAA,QAAG,eAClE;YAAK,SAAS,EAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAAO,eACxB,QAAC,MAAM;YAAC,IAAI,EAAE,WAAY;YAAC,IAAI,EAAE;UAAW;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA,gBAC9C;MAAA;QAAA;QAAA;QAAA;MAAA;IAED;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACA;AAEb;AAAC,GA/BuBH,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}