{"ast":null,"code":"var _jsxFileName = \"/home/bardberry/BardBerry/yandex/school/react_homework/client/src/pages/Main/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '../../components/Button/Button';\nimport Checkbox from '../../components/Checkbox/Checkbox';\nimport Modal from '../../components/Modal/Modal';\nimport TaskCard from '../../components/TaskCard/TaskCard';\nimport { useToggle } from '../../hooks/useToggle';\nimport styles from './styles.module.css';\nimport close from '../../assets/images/close.png';\nimport Input from '../../components/Input/Input';\nimport TagSelector from '../../components/TagSelector/TagSelector';\nimport Comment from '../../components/Comment/Comment';\nimport { database } from '../../assets/database';\nimport TaskForm from '../../components/TaskForm/TaskForm';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main(_ref) {\n  _s();\n  let {\n    modal\n  } = _ref;\n  let {\n    value,\n    toggle\n  } = useToggle(false);\n  const [modalType, setModalType] = useState('');\n  const [tickets, setTickets] = useState([]);\n  const [tags, setTags] = useState([]);\n  useEffect(() => {\n    if (modal) {\n      setModalType(modal);\n      toggle();\n    }\n  }, [modal]);\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch('http://localhost:3030/', {\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setTickets(data.tickets);\n        setTags(data.tagsArray);\n      }\n    }\n    fetchData();\n  }, []);\n  function clickHandler(e) {\n    // console.log(e.target);\n    switch (e.target.textContent) {\n      case '+ Добавить тикет':\n        setModalType('create');\n        break;\n      default:\n        setModalType('delete');\n        break;\n    }\n    toggle();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [modalType === 'create' && value && /*#__PURE__*/_jsxDEV(Modal, {\n      text: 'Создать тикет',\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: close,\n        alt: \"\",\n        onClick: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        modalType: modalType,\n        onClick: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 43\n    }, this), modalType !== 'create' && value && /*#__PURE__*/_jsxDEV(Modal, {\n      text: 'Редактировать',\n      tagsArray: tags.tagsArray,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: close,\n        alt: \"\",\n        onClick: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        modalType: modalType,\n        onClick: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.filter,\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        text: 'Комментарий'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        text: 'Описание'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        text: 'Тег'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.task_container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.todo_container,\n          children: [tickets === null || tickets === void 0 ? void 0 : tickets.filter(el => el.status === 'Todo').map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n            text: task.text,\n            tagsArray: task.tagsArray,\n            id: task.id,\n            clickHandler: clickHandler,\n            comments: task.comments,\n            description: task.description\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 74\n          }, this)), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/create\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              text: '+ Добавить тикет',\n              type: 'add_big'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"In progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.progress_container,\n          children: [tickets === null || tickets === void 0 ? void 0 : tickets.filter(el => el.status === 'In progress').map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n            text: task.text,\n            tagsArray: task.tagsArray,\n            id: task.id,\n            clickHandler: clickHandler,\n            comments: task.comments,\n            description: task.description\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 81\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            text: '+ Добавить тикет',\n            type: 'add_big',\n            onClick: clickHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.done_container,\n          children: tickets === null || tickets === void 0 ? void 0 : tickets.filter(el => el.status === 'Done').map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n            text: task.text,\n            tagsArray: task.tagsArray,\n            id: task.id,\n            clickHandler: clickHandler,\n            comments: task.comments,\n            description: task.description\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 74\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"8RNBufB2sXDnvKKIImSQL0FuS9s=\", false, function () {\n  return [useToggle];\n});\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","Button","Checkbox","Modal","TaskCard","useToggle","styles","close","Input","TagSelector","Comment","database","TaskForm","useEffect","Link","Main","modal","value","toggle","modalType","setModalType","tickets","setTickets","tags","setTags","fetchData","response","fetch","credentials","ok","data","json","tagsArray","clickHandler","e","target","textContent","container","filter","task_container","todo_container","el","status","map","task","text","id","comments","description","progress_container","done_container"],"sources":["/home/bardberry/BardBerry/yandex/school/react_homework/client/src/pages/Main/Main.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Button from '../../components/Button/Button';\nimport Checkbox from '../../components/Checkbox/Checkbox'\nimport Modal from '../../components/Modal/Modal';\nimport TaskCard from '../../components/TaskCard/TaskCard';\nimport { useToggle } from '../../hooks/useToggle';\nimport styles from './styles.module.css';\nimport close from '../../assets/images/close.png'\nimport Input from '../../components/Input/Input';\nimport TagSelector from '../../components/TagSelector/TagSelector';\nimport Comment from '../../components/Comment/Comment';\n\nimport { database } from '../../assets/database';\nimport TaskForm from '../../components/TaskForm/TaskForm';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Main({ modal }) {\n  let { value, toggle } = useToggle(false);\n  const [modalType, setModalType] = useState('');\n  const [tickets, setTickets] = useState([]);\n  const [tags, setTags] = useState([]);\n\n  useEffect(() => {\n    if (modal) {\n      setModalType(modal);\n      toggle();\n    }\n  }, [modal])\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch('http://localhost:3030/', {\n        credentials: 'include',\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setTickets(data.tickets);\n        setTags(data.tagsArray);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  function clickHandler(e) {\n    // console.log(e.target);\n    switch (e.target.textContent) {\n      case '+ Добавить тикет':\n        setModalType('create');\n        break;\n      default:\n        setModalType('delete');\n        break;\n    }\n    toggle();\n  }\n\n\n  return (\n    <div className={styles.container}>\n      {modalType === 'create' && value && <Modal text={'Создать тикет'}>\n        <img src={close} alt=\"\" onClick={toggle} />\n        <TaskForm modalType={modalType} onClick={toggle} />\n      </Modal>}\n\n      {modalType !== 'create' && value && <Modal text={'Редактировать'} tagsArray={tags.tagsArray}>\n        <img src={close} alt=\"\" onClick={toggle} />\n        <TaskForm modalType={modalType} onClick={toggle} />\n      </Modal>}\n\n      <div className={styles.filter}>\n        <Checkbox text={'Комментарий'} />\n        <Checkbox text={'Описание'} />\n        <Checkbox text={'Тег'} />\n      </div>\n      <div className={styles.task_container}>\n        <div>\n          <h2>Todo</h2>\n          <div className={styles.todo_container}>\n            {tickets?.filter((el) => el.status === 'Todo').map((task) => <TaskCard text={task.text} tagsArray={task.tagsArray} key={task.id} id={task.id} clickHandler={clickHandler} comments={task.comments} description={task.description} />)}\n            <Link to='/create'><Button text={'+ Добавить тикет'} type={'add_big'} /></Link>\n          </div>\n        </div>\n        <div>\n          <h2>In progress</h2>\n          <div className={styles.progress_container}>\n            {tickets?.filter((el) => el.status === 'In progress').map((task) => <TaskCard text={task.text} tagsArray={task.tagsArray} key={task.id} id={task.id} clickHandler={clickHandler} comments={task.comments} description={task.description} />)}\n            <Button text={'+ Добавить тикет'} type={'add_big'} onClick={clickHandler} />\n          </div>\n        </div>\n        <div>\n          <h2>Done</h2>\n          <div className={styles.done_container}>\n            {tickets?.filter((el) => el.status === 'Done').map((task) => <TaskCard text={task.text} tagsArray={task.tagsArray} key={task.id} id={task.id} clickHandler={clickHandler} comments={task.comments} description={task.description} />)}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}